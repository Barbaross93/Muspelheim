
###############################
#
# ░█▀▀░█░█░█░█░█░█░█▀▄░█▀▄░█▀▀
# ░▀▀█░▄▀▄░█▀█░█▀▄░█░█░█▀▄░█░░
# ░▀▀▀░▀░▀░▀░▀░▀░▀░▀▀░░▀░▀░▀▀▀
#
###############################

#
# wm independent hotkeys
#

# terminal emulator
super + Return
	sterm

# Open FM
super + backslash
	sterm -e lf

# program launcher
super + e
	dmenu_run_i -p 'Launch:'

# pick *moji
super + shift + m
	splatmoji copy

# switch windows
super + w
	window-select

# get window title
super + alt + w
	notify-send "Window title" "$(xdotool getactivewindow getwindowname)"

# Rofi notes/todo
super + space
	dmenu-task

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && notify-send "Sxhkd" "Config reloaded"

# Toggle bar
#super + b
#	togglebar.sh

# teleport cursor
super + alt + c
	xdotool mousemove --window $(bspc query -N -n) --polar 0 0

# Dmenu usb controls
super + u; {m, u}
	{dmenumount,dmenuumount}

# Print screen
Print
	prtscr

super + Print
	prtregion

# Toggle Touchpad
XF86Launch1
	toggle_touchpad.sh

# Brightness up
XF86MonBrightnessUp
	bright up

# Brightness down
XF86MonBrightnessDown
	bright down

# volume up
XF86AudioRaiseVolume
	vol pulse up

# volume down
XF86AudioLowerVolume
	vol pulse down

# toggle mute
XF86AudioMute
	vol pulse mute

# mic volume up
#super + XF86AudioRaiseVolume
#	vol pulsemic up

# mic volume down
#super + XF86AudioLowerVolume
#	vol pulsemic down

# mic toggle mute
XF86AudioMicMute
	vol pulsemic mute

# Start/resume or pause pomodoro
super + l; {i,s,p} 
	pomo-info {-i,-s,-p}

# Reset Pomodoro
super + l; r
	pomod kill && notify-send "pomod" "Pomodoro restarted"

# Bluetooth
XF86Bluetooth
	fzf-bluetooth

#Caffeine
XF86Display
	caffeine.sh

# play last/ restart audio
super + ctrl + alt + Left
	playerctl previous

# Play next audio
super + ctrl + alt + Right
	playerctl next

# toggle play/pause audio
super + ctrl + alt + Up
	playerctl play-pause

# stop audio
super + ctrl + alt + Down
	playerctl stop

# Rofi file search and directory opener
super + z
	file-finder

# display sxhkd bindings
super + a
	sxhkd_help

# edit sxhkd bindings
super + shift + a
	sterm -e vim ~/.config/sxhkd/sxhkdrc

# record selected screen in mp4/gif
super + r; {m,g}
	{mp4,gif}

# record part of screen in mp4/gif
super + shift + r; {m,g}
	{mp4 -s,gif -s}

# toggle picom
super + shift + p
	togglepicom

# Greenclip
super + x		
	CM_LAUNCHER=ddmenu clipmenu -p 'Clipboard:' -l 15
	#greenclip.sh

# Whats playing?
super + j
	spotplay

# How's the weather Ollie?
super + ctrl + w
	weather_status.sh

# toggle scratchpad terminal
super + d
	scrthpd.sh
 
# Outer padding script
super + {minus, equal}
	padding.sh {-,+}

# adjust gap size
super + shift + {minus,equal}
	bspc config -d focused window_gap $(( $(bspc config -d focused window_gap) {-,+} 8 ))

# reset gaps/outer padding
super + BackSpace
	bspc config -d focused top_padding 0; \
	bspc config -d focused right_padding 0; \
	bspc config -d focused left_padding 0; \
	bspc config -d focused bottom_padding 0; \
	bspc config -d focused window_gap -3

# Color picker
super + shift + c
	colorpicker.sh

# Query last notification
control + grave
	dunstctl history-pop
	#notif_hist.sh -q

# Close current notification
control + space
	dunstctl close
	#notif_hist.sh -c

# Close all notifications
control + shift + space
	dunstctl close-all

# Toggle notifications
super + shift + n
	toggledunst

# Toggle redshift
super + shift + l	
	toggle_redshift.sh

#Enable light mode
#XF86Tools
#	theme_switcher.sh -l

#Enable Dark mode
#XF86Favorites
#	theme_switcher.sh -d 

#
#  bspwm hotkeys
#

# Powermenu
super + shift + e
	power

# restart bspwm
super + shift + r
	bspc wm -r

# close
super + shift + q
	bspc node -c

# kill
super + alt + q
	bspc node -k

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest.window

# circulate windows forward or backwards
super + c; {f,b}
	bspc node @/ -C {forward,backward}

# flip windows vertically or horizontally
super + f;{v,h}
	bspc node @/ -F {vertical,horizontal}

# rotate windows by certain amounts
super + r;{s,m,l}
	bspc node @/ -R {90,180,270}

# Equalize/balance windows
super + n; {e,b}
	bspc node @/ {-E,-B}

#
# Hide/ unhide windows
#

# hide window
super + h; h
	bspc node -g hidden

# list and unhide selected window
super + h; u
	bsphidwins

# Hide all windows on current desktop
super + h; a
	hideall

# unhide all hidden windows
super + h; shift + a
	unhideall

#
# state/flags
#

# set the window state
super + s;{t,p,f,a}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + p;{m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
#super + {Left,Down,Up,Right}
#	bspc node -f {west,south,north,east}

# Smart move script; should rotate windows?
#super + shift + {Left,Down,Up,Right}
#	bspwm_smart_move {west,south,north,east}

# focus the node in the given direction (multimonitor)
super + {_,shift + }{Left,Down,Up,Right}
    mode={f,s}; \
    direction={west,south,north,east}; \
    monitor=$(bspc query -M --names -m $direction); \
    if bspc query -N -n $direction -m focused > /dev/null; then \
        bspc node -$mode $direction; \
    else; \
        if [ $mode = "f" ]; then \
            if bspc query -N -d ${monitor}:focused > /dev/null; then \
                bspc node -$mode $direction; \
            else; \
                bspc monitor -f $direction; \
            fi; \
        else; \
            bspc node -m $direction --follow; \
        fi; \
    fi

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {j,k}
	bspc node -f {next,prev}.local.!hidden.window.!locked

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node
super + Tab
	bspc node -f last

# focus the last desktop
super + shift + Tab
	bspc desktop -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
#super + {_,shift + }{1-9,0}
#	bspc {desktop -f,node -d} focused:'^{1-9,10}'

# Focus or bounce between desktops
super + {1-9,0}
	target='^{1-9,10}'; \
	[ "$(bspc query -D -d "$target")" != "$(bspc query -D -d)" ] \
		&& bspc desktop -f "$target" || bspc desktop -f last.local

# Send to the given desktop (multimonitor)
#super + shift + {1-9,0}
#    monitor=$(bspc query -M --names -m focused); \
#    bspc node -d $monitor:'^'{1-9,10}

# Send to the given desktop (multimonitor)
super + shift + {1-9,0}
    bspc node -d {1-9,10}

# Swap the contents of two desktops
super + alt + {0-9}
	target={10,1-9}; \
	bspc node "@focused:/" -s "@^$target:/" \
	    || bspc node "@focused:/" -d "^$target" \
	    || bspc node "@^$two:/" -d focused

# Swap monitors
super + {less,greater}
	bspc monitor --focus {prev,next}

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

#resize
super + alt + {Left,Down,Up,Right}
	resize.sh {west,south,north,east}

# move a floating window
super + alt + {h,j,k,l}
	bspc node -v {-60 0,0 60,0 -60,60 0}

#
# Tabbing
#

# Tab focused window
super + t; t
	bsptab tab focused

# Add windows to tabbed
super + t; {Left,Down,Up,Right}
	bsptab add {west,south,north,east}.local focused

# Add all windows to tabbed
super + t; a
	bsptab add-all focused

# Remove windows from tabbed
super + t; {_,shift + }r
	bsptab remove{_,-all} focused

# Move tab to desktop
super + t; {1-9,0}
	bsptab remove-desktop focused {1-9,0}

# Add next new window to tabbed
super + t; {_,shift + }n
	bsptab add-{next,new} focused

# Stop auto-tabbing windows
super + t; s
	bsptab stop-add-new

#
# Status notifications
#

# bspwm status
super + XF86AudioMute
	status_notif.sh --bspwm

# calendar (date/time)
super + XF86AudioLowerVolume
	status_notif.sh --calendar

# audio status
super + XF86AudioRaiseVolume
	status_notif.sh --audio

# brightness status
super + XF86AudioMicMute
	status_notif.sh --brightness

# battery status
super + XF86MonBrightnessDown
	status_notif.sh --battery

# internet status
super + Xf86MonBrightnessUp
	status_notif.sh --internet

# Bluetooth status
super + XF86Display
	status_notif.sh --vpn

# Redshift status
super + XF86Tools
	status_notif.sh --redshift

# VPN status
super + XF86Tools
	status_notif.sh --taskwarrior

# Misc status
XF86Tools
	status_notif.sh --extra

# full/simplified status
super + {,shift} + XF86Launch1
	status_notif.sh {--simple,--full}

# Fany status
XF86Favorites
	fancy_status.sh --fancy
