#!/usr/bin/env bash

FILE="$1"

image() {
	#ratio="$(grep ratios ~/.config/lf/lfrc | head -n1 | awk '{print $3}' | tr ':' '/')"
	#width_percentage=$(echo "(($ratio)*100)-8" | bc -l | cut -d '.' -f1)
	#if [ -n "$TMUX" ]; then
	#	echo -e "\ePtmux;\e\e]20;${1};${width_percentage}x94+97+8:op=keep-aspect\a\e\\"
	#else
	#	echo -e "\e]20;${1};${width_percentage}x84+92+8:op=keep-aspect\a"
	#fi
	chafa -f symbols -c full -s "${2}x${3}" "$1"
	exit
}

CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"

handle_extension() {
	case "$(printf "%s\n" "$1" | awk '{print tolower($0)}')" in
	*.tgz | *.tar.gz | *.tar.bz2 | *.tbz2 | *.tar.txz | *.txz | *.tar | *.zip | *.jar | *.war | *.ear | *.oxt)
		tar --list --file "${1}"
		exit
		;;
	*.rar)
		unrar lt -p- -- "$1"
		exit
		;;
	*.7z)
		7z l -p -- "$1"
		exit
		;;
	*.[1-8])
		man "$1" | col -b
		exit
		;;
	*.o)
		nm "$1" | less
		exit
		;;
	*.torrent)
		transmission-show "$1"
		exit
		;;
	*.iso)
		iso-info --no-header -l "$1"
		exit
		;;
	*odt,*.ods,*.odp,*.sxw)
		pandoc -s -t markdown -- "$1"
		exit
		;;
	*.doc)
		catdoc "$1"
		exit
		;;
	*.csv)
		if command -v bat >/dev/null 2>&1; then
			bat --color=auto --style=plain --pager=never "$1" | 'sed s/,/\n/g'
		else
			sed 's/,/\n/g' "$1"
		fi
		exit
		;;
	*.wav | *.mp3 | *.flac | *.m4a | *.wma | *.ape | *.ac3 | *.og[agx] | *.spx | *.opus | *.as[fx])
		exiftool "$1"
		;;
	*.pdf)
		pdftoppm -jpeg -f 1 -singlefile "$1" "$CACHE"
		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
		;;
	*.epub)
		[ ! -f "$CACHE" ] &&
			epub-thumbnailer "$1" "$CACHE" 1024
		image "$CACHE" "$2" "$3" "$4" "$5"
		;;
	*.avi | *.mp4 | *.wmv | *.dat | *.3gp | *.ogv | *.mkv | *.mpg | *.mpeg | *.vob | *.fl[icv] | *.m2v | *.mov | *.webm | *.ts | *.mts | *.m4v | *.r[am] | *.qt | *.divx)
		ffmpeg -nostdin -y -i "${1}" -frames:v 1 -q:v 2 "${CACHE}.jpg"
		image "${CACHE}.jpg" "$2" "$3" "$4" "$5"
		;;
	*.bmp | *.jpg | *.jpeg | *.png | *.xpm | *.webp | *.gif)
		image "$1" "$2" "$3" "$4" "$5"
		;;
	*.json | *.ipynb)
		jq --color-output . "$1"
		python -m json.tool -- "$1"
		exit
		;;
	*.htm | *.html | *.xhtml)
		## Preview as text conversion
		w3m -dump "$1" && exit 5
		lynx -dump -- "$1" && exit 5
		elinks -dump "$1" && exit 5
		pandoc -s -t markdown -- "$1" && exit 5
		;;
	*.bdf | *.pcf)
		preview_png="/tmp/$(basename "${CACHE}").png"
		fontname="$(basename $1 | cut -d. -f1)"
		if hb-view -o "${preview_png}" \
			--font-size=14 \
			--verify \
			--line-space=14 \
			--text="${fontname}
ABCDEFGHIJKLMNOPQRSTUVWXYZ  
abcdefghijklmnopqrstuvwxyz
123456789.:,;(*!?') ff fl fi ffi ffl
The quick brown fox jumps over the lazy dog." \
			"$1"; then
			convert -- "${preview_png}" "${CACHE}" &&
				rm "${preview_png}" &&
				exit 6
		else
			exit 1
		fi
		;;
	esac
}

handle_mime() {
	local mimetype="${1}"
	case "${mimetype}" in
	## RTF and DOC
	text/rtf | *msword)
		## Preview as text conversion
		## note: catdoc does not always work for .doc files
		## catdoc: http://www.wagner.pp.ru/~vitus/software/catdoc/
		catdoc -- "$FILE" && exit 5
		exit 1
		;;

	## DOCX, ePub, FB2 (using markdown)
	## You might want to remove "|epub" and/or "|fb2" below if you have
	## uncommented other methods to preview those formats
	*wordprocessingml.document | */epub+zip | */x-fictionbook+xml)
		## Preview as markdown conversion
		pandoc -s -t markdown -- "$FILE" && exit 5
		exit 1
		;;

	## XLS
	*ms-excel)
		## Preview as csv conversion
		## xls2csv comes with catdoc:
		##   http://www.wagner.pp.ru/~vitus/software/catdoc/
		xls2csv -- "$FILE" && exit 5
		exit 1
		;;

	## Text
	text/* | */xml)
		if command -v bat >/dev/null 2>&1; then
			bat --color=always --style=plain --pager=never "$FILE"
		else
			cat "$FILE"
		fi
		exit
		;;

	## DjVu
	image/vnd.djvu)
		## Preview as text conversion (requires djvulibre)
		djvutxt "$FILE" | fmt -w "${PV_WIDTH}" && exit 5
		exiftool "$FILE" && exit 5
		exit 1
		;;

	## Image
	image/*)
		## Preview as text conversion
		# img2txt --gamma=0.6 --width="${PV_WIDTH}" -- "$1" && exit 4
		exiftool "$FILE" && exit 5
		exit 1
		;;

	## Video and audio
	video/* | audio/*)
		mediainfo "$FILE" && exit 5
		exiftool "$FILE" && exit 5
		exit 1
		;;
	esac
}

handle_fallback() {
	echo '----- File Type Classification -----' && file --dereference --brief -- "$1" && exit 5
	exit 1
}

MIMETYPE="$(file --dereference --brief --mime-type -- "$1")"

handle_extension "$1" "$2" "$3" "$4" "$5"
handle_mime "${MIMETYPE}"
handle_fallback "$1"
exit 0
